246 | 		});
247 | 	}
248 | 
249 | 	const { valid, errors } = validateBlueprint(blueprint);
250 | 	if (!valid) {
251 | 		const e = new Error(
                  ^
error: Invalid blueprint: must have required property 'path' at /steps/1/pluginZipFile
 errors: [
  {
    "instancePath": "/steps/1/pluginZipFile",
    "schemaPath": "#/definitions/VFSReference/required",
    "keyword": "required",
    "params": {
      "missingProperty": "path"
    },
    "message": "must have required property 'path'"
  },
  {
    "instancePath": "/steps/1/pluginZipFile",
    "schemaPath": "#/definitions/LiteralReference/required",
    "keyword": "required",
    "params": {
      "missingProperty": "name"
    },
    "message": "must have required property 'name'"
  },
  {
    "instancePath": "/steps/1/pluginZipFile",
    "schemaPath": "#/definitions/CoreThemeReference/required",
    "keyword": "required",
    "params": {
      "missingProperty": "slug"
    },
    "message": "must have required property 'slug'"
  },
  {
    "instancePath": "/steps/1/pluginZipFile",
    "schemaPath": "#/definitions/CorePluginReference/required",
    "keyword": "required",
    "params": {
      "missingProperty": "slug"
    },
    "message": "must have required property 'slug'"
  },
  {
    "instancePath": "/steps/1/pluginZipFile/resource",
    "schemaPath": "#/definitions/UrlReference/properties/resource/const",
    "keyword": "const",
    "params": {
      "allowedValue": "url"
    },
    "message": "must be equal to constant"
  },
  {
    "instancePath": "/steps/1/pluginZipFile",
    "schemaPath": "#/anyOf",
    "keyword": "anyOf",
    "params": {},
    "message": "must match a schema in anyOf"
  },
  {
    "instancePath": "/steps/1",
    "schemaPath": "#/properties/steps/items/anyOf/1/type",
    "keyword": "type",
    "params": {
      "type": "string"
    },
    "message": "must be string"
  },
  {
    "instancePath": "/steps/1",
    "schemaPath": "#/properties/steps/items/anyOf/2/not",
    "keyword": "not",
    "params": {},
    "message": "must NOT be valid"
  },
  {
    "instancePath": "/steps/1",
    "schemaPath": "#/properties/steps/items/anyOf/3/type",
    "keyword": "type",
    "params": {
      "type": "boolean"
    },
    "message": "must be boolean"
  },
  {
    "instancePath": "/steps/1",
    "schemaPath": "#/properties/steps/items/anyOf/3/const",
    "keyword": "const",
    "params": {
      "allowedValue": false
    },
    "message": "must be equal to constant"
  },
  {
    "instancePath": "/steps/1",
    "schemaPath": "#/properties/steps/items/anyOf/4/type",
    "keyword": "type",
    "params": {
      "type": "null"
    },
    "message": "must be null"
  },
  {
    "instancePath": "/steps/1",
    "schemaPath": "#/properties/steps/items/anyOf",
    "keyword": "anyOf",
    "params": {},
    "message": "must match a schema in anyOf"
  }
]

      at compileBlueprint (/Users/bero/Projects/wordpress-playground/packages/playground/blueprints/src/lib/compile.ts:251:13)
      at /Users/bero/Projects/wordpress-playground/packages/playground/cli/src/cli.ts:251:28

Bun v1.1.15 (macOS arm64)
